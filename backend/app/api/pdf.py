from fastapi import APIRouter, Depends, HTTPException
from fastapi.responses import StreamingResponse
from io import BytesIO
import pdfkit
from ..auth.utils import get_current_user
from ..models.schemas import PdfRequest

router = APIRouter()

@router.post("/generate")
async def generate_pdf(request: PdfRequest, current_user = Depends(get_current_user)):
    """Generate a PDF from an answer."""
    try:
        # Create HTML content
        html_content = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>ExamoBuddy Answer</title>
            <style>
                body {{ font-family: Arial, sans-serif; margin: 40px; }}
                h1 {{ color: #2F855A; }}
                .question {{ font-weight: bold; margin-bottom: 20px; }}
                .answer {{ line-height: 1.6; }}
                .footer {{ margin-top: 50px; text-align: center; font-size: 12px; color: #666; }}
            </style>
        </head>
        <body>
            <h1>ExamoBuddy</h1>
            {f'<div class="question">Q: {request.question}</div>' if request.question else ''}
            <div class="answer">{request.answer}</div>
            <div class="footer">Generated by ExamoBuddy - A Q&A platform for MBBS students</div>
        </body>
        </html>
        """
        
        # Generate PDF
        pdf = pdfkit.from_string(html_content, False)
        
        # Return PDF as a downloadable file
        return StreamingResponse(
            BytesIO(pdf),
            media_type="application/pdf",
            headers={"Content-Disposition": "attachment; filename=examobuddy_answer.pdf"}
        )
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))
